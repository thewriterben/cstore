name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/cstore
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=${{ github.event.inputs.environment || 'production' }}

    - name: Run database migrations
      run: |
        echo "Running database migrations..."
        # Add migration commands here when needed
        # kubectl exec -it deployment/cstore-api -- npm run migrate

    # Kubernetes deployment steps
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      if: github.event.inputs.environment == 'production' || github.ref == 'refs/heads/main'

    - name: Configure kubectl
      if: github.event.inputs.environment == 'production' || github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
        export KUBECONFIG=./kubeconfig

    - name: Deploy to Kubernetes
      if: github.event.inputs.environment == 'production' || github.ref == 'refs/heads/main'
      run: |
        # Update deployment with new image
        kubectl set image deployment/cstore-api cstore=${{ secrets.DOCKER_USERNAME }}/cstore:${{ steps.meta.outputs.version }} -n cstore
        kubectl rollout status deployment/cstore-api -n cstore --timeout=5m

    - name: Rollback on failure
      if: failure() && (github.event.inputs.environment == 'production' || github.ref == 'refs/heads/main')
      run: |
        kubectl rollout undo deployment/cstore-api -n cstore
        
    - name: Notify deployment status
      if: always()
      run: |
        echo "Deployment completed with status: ${{ job.status }}"
        # Add notification webhook here (Slack, Discord, etc.)
